line(colour = col_scheme),
rect(colour = col_scheme),
#add white background
panel.background = element_rect(fill = "white"),
#modify grid
panel.grid.major.x = element_line(colour = "#B6A7B5",
size = 0.25),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#B6A7B5",
size = 0.5),
panel.grid.minor.y = element_blank(),
#sets the default text size to 12
text(colour = "#50434F", size = 12),
#axis text slightly smaller than default
axis.text = element_text(size = rel(0.75)),
#axis titles slightly larger than default
axis.title = element_text(size = rel(1.5)),
#legend to the right
legend.position = "right"
)
}
qb_device %>%
group_by(device, id, hours) %>%
summarise(total_steps_counted = sum(counts)) %>%
ggplot(aes(x = hours,
y = total_steps_counted)) +
geom_line() +
facet_grid(device ~ id) +
qb_theme
qb_device %>%
group_by(device, id, hours) %>%
summarise(total_steps_counted = sum(counts)) %>%
ggplot(aes(x = hours,
y = total_steps_counted)) +
geom_line() +
facet_grid(device ~ id) +
qb_theme()
col_scheme <- c("#E89FE9", "#50434F", "#B6A7B5", "#F9A472", "#BD7040")
qb_theme <- function() {
theme(
#add white background
panel.background = element_rect(fill = "white"),
#modify grid
panel.grid.major.x = element_line(colour = "#B6A7B5",
size = 0.25),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#B6A7B5",
size = 0.5),
panel.grid.minor.y = element_blank(),
#sets the default text size to 12
text(colour = "#50434F", size = 12),
#axis text slightly smaller than default
axis.text = element_text(size = rel(0.75)),
#axis titles slightly larger than default
axis.title = element_text(size = rel(1.5)),
)
}
qb_device %>%
group_by(device, id, hours) %>%
summarise(total_steps_counted = sum(counts)) %>%
ggplot(aes(x = hours,
y = total_steps_counted)) +
geom_line() +
facet_grid(device ~ id) +
qb_theme()
qb_device %>%
group_by(device, id, hours) %>%
summarise(total_steps_counted = sum(counts)) %>%
ggplot(aes(x = hours,
y = total_steps_counted)) +
geom_line() +
facet_grid(device ~ id)
col_scheme <- c("#E89FE9", "#50434F", "#B6A7B5", "#F9A472", "#BD7040")
qb_theme <- function(base_size = 12) {
theme(
#add white background
panel.background = element_rect(fill = "white"),
#modify grid
panel.grid.major.x = element_line(colour = "#B6A7B5",
size = 0.25),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#B6A7B5",
size = 0.5),
panel.grid.minor.y = element_blank(),
#axis text slightly smaller than default
axis.text = element_text(size = rel(0.75)),
#axis titles slightly larger than default
axis.title = element_text(size = rel(1.5)),
)
}
qb_device %>%
group_by(device, id, hours) %>%
summarise(total_steps_counted = sum(counts)) %>%
ggplot(aes(x = hours,
y = total_steps_counted)) +
geom_line() +
facet_grid(device ~ id) +
qb_theme()
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col(colour = col_scheme) +
qb_theme()
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col(fill = col_scheme) +
qb_theme()
?labs()
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col() +
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in ")
qb_theme()
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col() +
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019")
qb_theme()
col_scheme <- c("#E89FE9", "#50434F", "#B6A7B5", "#F9A472", "#BD7040")
qb_theme <- function(base_size = 12) {
theme(
#add white background
panel.background = element_blank,
#modify grid
panel.grid.major.x = element_line(colour = "#B6A7B5",
size = 0.25),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#B6A7B5",
size = 0.5),
panel.grid.minor.y = element_blank(),
#axis text slightly smaller than default
axis.text = element_text(size = rel(0.75)),
#axis titles slightly larger than default
axis.title = element_text(size = rel(1.5)),
)
}
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col() +
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019")
qb_theme()
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col(col = col_scheme) +
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019")
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col(col = sample(col_scheme)) +
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019")
?sample()
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col(col = sample(col_scheme, n = 4)) +
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019")
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col(aes(col = col_scheme))
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col(aes(col = sample(col_scheme, n = 4)))
scale_fill_manual
?scale_fill_manual
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col()
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019")
scale_fill_manual(palette(col_scheme))
qb_theme()
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col()
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019") +
qb_theme()
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line() +
#labs(x = )
qb_theme()
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line() +
#labs(x = )
qb_theme()
qb_theme <- function() {
theme(
#add white background
panel.background = element_blank,
#modify grid
panel.grid.major.x = element_line(colour = "#B6A7B5",
size = 0.25),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_line(colour = "#B6A7B5",
size = 0.5),
panel.grid.minor.y = element_blank(),
#axis text slightly smaller than default
axis.text = element_text(size = rel(0.75)),
#axis titles slightly larger than default
axis.title = element_text(size = rel(1.5)),
)
}
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col()
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019") +
qb_theme()
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line() +
#labs(x = )
qb_theme()
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
#labs(x = "")
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
labs(x = "Date",
y = "Amount",
title = "Monthly Sales of Kwikbit Unit 1")
library(tidyverse)
library(CodeClanData)
library(scales)
qb_revenue <- qb_revenue_breakdown
qb_monthly_sales <- qb_monthly_sales
qb_competitors <- qb_competitors
qb_device <- qb_device_data
qb_revenue %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Product)) +
geom_col()
labs(x = "Year",
y = "Revenue",
title = "Sources of revenue in 2018 and 2019")
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
labs(x = "Date",
y = "Amount",
title = "Monthly Sales of Kwikbit Unit 1")
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
labs(x = "Date",
y = "Amount",
title = "Monthly Sales of Kwikbit Unit 1\n")
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
labs(x = "Date",
y = "Amount",
title = "Monthly Sales of Kwikbit Unit 1\n")
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
labs(x = "Date",
y = "Amount",
title = "Monthly Sales of Kwikbit Unit 1\n")
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
labs(x = "Date",
y = "Amount",
title = "Monthly Sales of Kwikbit Unit 1",
subtitle = "Data from monthly sales\n")
qb_monthly_sales %>%
filter(Cashflow == "Total Revenue" | Cashflow == "Cost") %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line()
qb_monthly_sales %>%
filter(Cashflow == "Total Revenue" | Cashflow == "Cost" & Date >= 2019-01-01) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow == ("Total Revenue" | "Cost") & Date >= 2019-01-01) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow == ("Total Revenue" | "Cost") & Date = grepl(2019)) %>%
qb_monthly_sales %>%
filter(Cashflow == "Total Revenue" | Cashflow == "Cost" & Date = grepl(2019)) %>%
qb_monthly_sales %>%
filter(Cashflow == "Total Revenue" | Cashflow == "Cost" & Date == grepl(2019)) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow == "Total Revenue" | Cashflow == "Cost" & Date == grepl(Date, 2019)) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow == ("Total Revenue" | "Cost") & Date == grepl(Date, 2019)) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow != "Kwikbit Unit 1 Sales" & Date == grepl(Date, 2019)) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow != "Kwikbit Unit 1 Sales" & Date == grep("2019", Date)) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow != "Kwikbit Unit 1 Sales" & Date == grepl("2019", Date)) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow != "Kwikbit Unit 1 Sales" & grepl("2019", Date)) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs ")
qb_monthly_sales %>%
filter(Cashflow != "Kwikbit Unit 1 Sales" & grepl("2019", Date)) %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs for 2019",
fill = "Cash flow")
qb_monthly_sales %>%
filter(Cashflow == "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount)) +
geom_line()
labs(x = "Date",
y = "Amount",
title = "Monthly Sales of Kwikbit Unit 1",
subtitle = "Data from monthly sales\n")
qb_competitors %>%
ggplot(aes(x = Year,
y = Revenue,
colour = Company)) +
geom_area() +
scale_y_continuous(labels = scales::comma)
qb_competitors %>%
ggplot(aes(x = Year,
y = Revenue,
colour = Company)) +
geom_area() +
scale_y_continuous(labels = scales::comma) +
labs(title = "Competitor fitness tracker sales for the past 5 years")
qb_competitors %>%
ggplot(aes(x = Year,
y = Revenue,
colour = Company)) +
geom_line() +
geom_point() +
scale_y_continuous(labels = scales::comma) +
labs(title = "Competitor fitness tracker sales for the past 5 years")
qb_device %>%
group_by(device, id, hours) %>%
summarise(total_steps_counted = sum(counts)) %>%
ggplot(aes(x = hours,
y = total_steps_counted)) +
geom_line() +
facet_grid(device ~ id)
qb_device %>%
group_by(device, id, hours) %>%
summarise(total_steps_counted = sum(counts)) %>%
ggplot(aes(x = hours,
y = total_steps_counted)) +
geom_line() +
facet_grid(device ~ id) +
labs(x = "Time tracked",
y = "Steps counted",
title = "Number of steps counted over time on different devices",
subtitle = "Comparison between Qikbit and top competitors for 5 participants")
qb_device %>%
group_by(device, id, hours) %>%
summarise(total_steps_counted = sum(counts)) %>%
ggplot(aes(x = hours,
y = total_steps_counted)) +
geom_line() +
facet_grid(device ~ id) +
labs(x = "\nTime tracked",
y = "Steps counted",
title = "Number of steps counted over time on different devices",
subtitle = "Comparison between Qikbit and top competitors for 5 participants\n")
qb_monthly_sales %>%
filter(Cashflow != "Kwikbit Unit 1 Sales") %>%
ggplot(aes(x = Date,
y = Amount,
colour = Cashflow)) +
geom_line() +
labs(x = "Date",
y = "Amount",
title = "Monthly revenue and costs for 2018/2019",
fill = "Cash flow")
qb_competitors %>%
ggplot(aes(x = Year,
y = Revenue,
fill = Company)) +
geom_area() +
scale_y_continuous(labels = scales::comma) +
labs(title = "Competitor fitness tracker sales for the past 5 years")
?scale_colour_manual
