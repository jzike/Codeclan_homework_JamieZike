library(tidyverse)
library(janitor)
mobile_reviews <- read_csv("20190928-items.csv")
mobile_reviews <- read_csv("20190928-items.csv") %>% clean_names()
mobile_reviews %>% names()
View(mobile_reviews)
mobile_reviews %>% skimr::skim()
mobile_reviews %>% names()
mobile_reviews %>% skimr::skim()
mobile_reviews
mobile_reviews %>%
distinct(brand)
mobile_reviews %>%
group_by(brand)
mobile_reviews %>%
group_by(brand) %>%
summarise(count = n())
mobile_reviews %>%
group_by(brand) %>%
summarise(count = n()) %>%
arrange(count)
mobile_reviews %>%
group_by(brand) %>%
summarise(count = n()) %>%
arrange(desc(count))
mobile_reviews %>%
select(brand, title) %>%
group_by(brand)
mobile_reviews %>%
select(brand, title) %>%
group_by(brand, title)
mobile_reviews %>%
group_by(brand) %>%
summarise(count = n_distinct(title))
mobile_reviews %>%
filter(brand == "Samsung") %>%
distinct(title)
mobile_reviews %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram()
mobile_reviews %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..)) +
stat_function(
fun = ~dnorm(.,mean = mean(mobile_reviews$rating),
sd = sd(mobile_reviews$rating))
)
shapiro.test(mobile_reviews$rating)
samsung_data <- mobile_reviews %>%
filter(brand == "Samsung")
shapiro.test(samsung_data$rating)
options(scipen = 99)
shapiro.test(samsung_data$rating)
sd(mobile_reviews$rating)
sd(mobile_reviews$rating)*3
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*3
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating)
sd(mobile_reviews$rating)*1 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*1
sd(mobile_reviews$rating)*2 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*2
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*3
?case_when
samsung_data %>%
mutate(num_sd =  case_when(
between(rating,
sd(mobile_reviews$rating)*1 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*1) ~
"One SD",
between(rating,
sd(mobile_reviews$rating)*2 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*2) ~
"Two SD",
between(rating,
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*3) ~
"Three SD",
is.na(rating) ~ NA_integer_,
TRUE ~ "Outlier"
))
samsung_data %>%
mutate(num_sd =  case_when(
between(rating,
sd(mobile_reviews$rating)*1 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*1) ~
"One SD",
between(rating,
sd(mobile_reviews$rating)*2 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*2) ~
"Two SD",
between(rating,
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*3) ~
"Three SD",
is.na(rating) ~ NA_character_,
TRUE ~ "Outlier"
))
samsung_data %>%
mutate(num_sd =  case_when(
between(rating,
sd(mobile_reviews$rating)*1 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*1) ~
"One SD",
between(rating,
sd(mobile_reviews$rating)*2 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*2) ~
"Two SD",
between(rating,
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating),
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*3) ~
"Three SD",
is.na(rating) ~ NA_character_,
TRUE ~ "Outlier"
), .after = rating)
sd(mobile_reviews$rating)*1 + mean(mobile_reviews$rating)
samsung_data %>%
mutate(num_sd =  case_when(
between(rating, 2.939, 4.276) ~
"One SD",
between(rating,
2.270, 4.945) ~
"Two SD",
between(rating,
1.601, 5.614) ~
"Three SD",
is.na(rating) ~ NA_character_,
TRUE ~ "Outlier"
), .after = rating)
samsung_data <- samsung_data %>%
mutate(num_sd =  case_when(
between(rating, 2.939, 4.276) ~
"One SD",
between(rating,
2.270, 4.945) ~
"Two SD",
between(rating,
1.601, 5.614) ~
"Three SD",
is.na(rating) ~ NA_character_,
TRUE ~ "Outlier"
), .after = rating)
samsung_data %>%
group_by(num_sd) %>%
summarise(count = n())
samsung_data %>%
group_by(num_sd) %>%
summarise(count = n()) %>%
mutate(prob = count / sum(count))
samsung_data %>%
group_by(num_sd) %>%
summarise(count = n()) %>%
mutate(prob = count / sum(count)) %>%
arrange(factor(num_sd, levels = c(
"One SD",
"Two SD",
"Three SD",
"Outlier"
)))
samsung_data %>%
group_by(num_sd) %>%
summarise(count = n()) %>%
mutate(prob = count / sum(count)) %>%
arrange(factor(num_sd, levels = c(
"One SD",
"Two SD",
"Three SD",
"Outlier"
))) %>%
mutate(csum = cumsum(prob))
mobile_reviews %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..)) +
stat_function(
fun = ~dnorm(.,mean = mean(mobile_reviews$rating),
sd = sd(mobile_reviews$rating))
)
#99.7% of the ratings should fall within 3 standard deviations of the mean.
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*3
mobile_reviews %>%
group_by(brand) %>%
summarise(count = n_distinct(title))
samsung_data %>%
#group by the number of SDs
group_by(num_sd) %>%
#summarise the number of ratings in each category
summarise(count = n()) %>%
#get the probability for each category of ratings
mutate(prob = count / sum(count)) %>%
#arrange in the correct order (to prep for cumsum)
arrange(factor(num_sd, levels = c(
"One SD",
"Two SD",
"Three SD",
"Outlier"
))) %>%
#get the cumulative sum of prob in a new column
mutate(csum = cumsum(prob))
library(tidyverse)
library(janitor)
mobile_reviews <- read_csv("20190928-items.csv") %>% clean_names()
mobile_reviews %>% names()
mobile_reviews %>% skimr::skim()
mobile_reviews
mobile_reviews %>%
group_by(brand) %>%
summarise(count = n_distinct(title))
mobile_reviews %>%
filter(brand == "Samsung") %>%
ggplot(aes(x = rating)) +
geom_histogram(aes(y = ..density..)) +
stat_function(
fun = ~dnorm(.,mean = mean(mobile_reviews$rating),
sd = sd(mobile_reviews$rating))
)
#99.7% of the ratings should fall within 3 standard deviations of the mean.
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*3
samsung_data <- mobile_reviews %>%
filter(brand == "Samsung")
options(scipen = 99)
shapiro.test(samsung_data$rating)
sd(mobile_reviews$rating)*1 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*1
sd(mobile_reviews$rating)*2 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*2
sd(mobile_reviews$rating)*3 + mean(mobile_reviews$rating)
mean(mobile_reviews$rating) - sd(mobile_reviews$rating)*3
samsung_data <- samsung_data %>%
#add a column that shows whether a value lies within 1, 2 or 3 SDs of the mean
mutate(num_sd =  case_when(
between(rating, 2.939, 4.276) ~
"One SD",
between(rating,
2.270, 4.945) ~
"Two SD",
between(rating,
1.601, 5.614) ~
"Three SD",
#keep any NAs because I can't remember if there were any
is.na(rating) ~ NA_character_,
#assign all remaining values as outliers.
TRUE ~ "Outlier"
), .after = rating)
samsung_data %>%
#group by the number of SDs
group_by(num_sd) %>%
#summarise the number of ratings in each category
summarise(count = n()) %>%
#get the probability for each category of ratings
mutate(prob = count / sum(count)) %>%
#arrange in the correct order (to prep for cumsum)
arrange(factor(num_sd, levels = c(
"One SD",
"Two SD",
"Three SD",
"Outlier"
))) %>%
#get the cumulative sum of prob in a new column
mutate(csum = cumsum(prob))
