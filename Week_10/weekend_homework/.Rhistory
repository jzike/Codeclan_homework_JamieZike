avocado_resid <- train_avocadoes %>%
add_residuals(mod_1a) %>%
select(-average_price)
avocado_resid %>%
ggpairs(aes(colour = is_organic, alpha = 0.5), progress = FALSE)
View(avocados_tidy)
avocados_tidy <- avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic")
avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic")
avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic") %>%
filter(is.na(month))
avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic") %>%
filter(is.na(season))
avocados_tidy <- avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic") %>%
#we don't need the bag or PLU data now that we've replaced with proportions and we no longer need type or date
select(-c(x1, date, region, x4046, x4225, x4770, small_bags, large_bags,
x_large_bags, type, month))
avocados_tidy
avocados_tidy <- avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic") %>%
#we don't need the bag or PLU data now that we've replaced with proportions and we no longer need type or date
select(-c(x1, date, region, x4046, x4225, x4770, small_bags, large_bags,
x_large_bags, type))
avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic") %>%
#we don't need the bag or PLU data now that we've replaced with proportions and we no longer need type or date
select(-c(x1, date, region, x4046, x4225, x4770, small_bags, large_bags,
x_large_bags, type))
avocados_tidy <- avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic") %>%
#we don't need the bag or PLU data now that we've replaced with proportions and we no longer need type or date
select(-c(x1, date, region, x4046, x4225, x4770, small_bags, large_bags,
x_large_bags, type, month))
#checking for aliased variables
alias(average_price ~ ., avocados_tidy)
n_data <- nrow(avocados_tidy)
test_index <- sample(1:n_data, size = n_data * 0.2)
test_avocados <- slice(avocados_tidy, test_index)
train_avocadoes <- slice(avocados_tidy, -test_index)
train_avocadoes %>% skimr::skim()
train_avocadoes <- train_avocadoes %>%
mutate(across(prop_small_bag:prop_xl_bag,
~coalesce(.x, median(.x, na.rm = TRUE))))
ggpairs(train_avocadoes, progress = FALSE)
mod_1a <- lm(average_price ~ is_organic, train_avocadoes)
autoplot(mod_1a)
summary(mod_1a)
install.packages("lmtest")
library(lmtest)
bptest(mod_1a)
avocado_resid <- train_avocadoes %>%
add_residuals(mod_1a) %>%
select(-average_price)
avocado_resid %>%
ggpairs(aes(colour = is_organic, alpha = 0.5), progress = FALSE)
mod_2a <- lm(average_price ~ is_organic + prop_4225,
data = train_avocadoes)
autoplot(mod_2a)
mod_2a <- lm(log(average_price) ~ is_organic + prop_4225,
data = train_avocadoes)
autoplot(mod_2a)
bptest(mod_2a)
mod_1a <- lm(log(average_price) ~ is_organic, train_avocadoes)
autoplot(mod_1a)
summary(mod_1a)
bptest(mod_1a)
mod_1b <- lm(log(average_price) ~ prop_4046, train_avocadoes)
autoplot(mod_1b)
summary(mod_1b)
shapiro.test(avocado_resid$resid)
avocado_resid %>%
shapiro.test(resid)
shapiro.test(avocado_resid$resid)
shapiro.test(sample(avocado_resid$resid, n = 5000))
?sample
sample(avocado_resid, n = n_row(avocado_resid), size = 5000) %>%
shapiro.test()
sample(avocado_resid, size = 5000) %>%
shapiro.test()
#Changed to log of price after looking at the autoplot
mod_1a <- lm(log(average_price) ~ is_organic, train_avocadoes)
autoplot(mod_1a)
summary(mod_1a)
bptest(mod_1a)
(exp(0.35) - 1) * 100
avocado_resid <- train_avocadoes %>%
add_residuals(mod_1a) %>%
select(-average_price)
avocado_resid %>%
ggpairs(aes(colour = is_organic, alpha = 0.5), progress = FALSE)
mod_2a <- lm(log(average_price) ~ is_organic + prop_4225,
data = train_avocadoes)
autoplot(mod_2a)
summary(mod_2a)
bptest(mod_2a)
mod_2b <- lm(log(average_price) ~ is_organic + season,
data = train_avocadoes)
autoplot(mod_2b)
summary(mod_2b)
bptest(mod_2b)
#equation to find the percent increase(or decrease) in response for every one unit increase in independent variable
(exp(0.28) - 1) * 100
avocado_resid <- train_avocadoes %>%
add_residuals(mod_2a) %>%
select(-average_price, -is_organic, -prop_4225)
avocado_resid %>%
ggpairs(progress = FALSE)
mod_3a <- lm(log(average_price) ~ is_organic + prop_4225 + prop_large_bag,
data = train_avocadoes)
mod_3a <- lm(log(average_price) ~ is_organic + prop_4225 + prop_large_bag,
data = train_avocadoes)
autoplot(mod_3a)
summary(mod_3a)
bptest(mod_3a)
mod_3b <- lm(log(average_price) ~ is_organic + prop_4225 + season,
data = train_avocadoes)
autoplot(mod_3b)
summary(mod_3b)
bptest(mod_3b)
#equation to find the percent increase(or decrease) in response for every one unit increase in independent variable
(exp(0.16) - 1) * 100
avocado_resid <- train_avocadoes %>%
add_residuals(mod_3b) %>%
select(-average_price, -is_organic, -prop_4225, -season)
avocado_resid %>%
ggpairs(progress = FALSE)
mod_4a <- lm(log(average_price) ~ is_organic + prop_4225 + season + prop_large_bag,
data = train_avocadoes)
autoplot(mod_4a)
summary(mod_4a)
bptest(mod_4a)
library(leaps)
regsubsets_backward <- regsubsets(average_price ~ .,
data = train_avocadoes,
nvmax = 8,#max number of variables
method = "backward")
sum_regsubsets_backward <- summary(regsubsets_backward)
sum_regsubsets_backward$which
plot(regsubsets_backward,
scale = "adjr2")
plot(sum_regsubsets_backward$rsq,
type = "o,
pch = 20")
plot(sum_regsubsets_backward$bic,
type = "o,
pch = 20")
library(tidyverse)
library(modelr)
library(ggfortify)
library(GGally)
library(lubridate)
avocados <- read_csv("data/avocado.csv") %>% janitor::clean_names()
avocados_tidy <- avocados %>%
#clean up variables as described in notes above
mutate(prop_4046 = x4046/total_volume,
prop_4225 = x4225/total_volume,
prop_4770 = x4770/total_volume,
prop_small_bag = small_bags/total_bags,
prop_large_bag = large_bags/total_bags,
prop_xl_bag = x_large_bags/total_bags,
month = lubridate::month(date, label = TRUE),
season = case_when(
month %in% c("Jan", "Feb", "Dec") ~ "Winter",
month %in% c("Mar", "Apr", "May") ~ "Spring",
month %in% c("Jun", "Jul", "Aug") ~ "Summer",
TRUE ~ "Fall"
),
is_organic = type == "organic") %>%
#we don't need the bag or PLU data now that we've replaced with proportions and we no longer need type or date
select(-c(x1, date, region, x4046, x4225, x4770, small_bags, large_bags,
x_large_bags, type, month))
n_data <- nrow(avocados_tidy)
test_index <- sample(1:n_data, size = n_data * 0.2)
test_avocados <- slice(avocados_tidy, test_index)
train_avocadoes <- slice(avocados_tidy, -test_index)
train_avocadoes <- train_avocadoes %>%
mutate(across(prop_small_bag:prop_xl_bag,
~coalesce(.x, median(.x, na.rm = TRUE))))
#Changed to log of price after looking at the autoplot
mod_1a <- lm(log(average_price) ~ is_organic, train_avocadoes)
autoplot(mod_1a)
summary(mod_1a)
bptest(mod_1a)
library(lmtest)
#Changed to log of price after looking at the autoplot
mod_1a <- lm(log(average_price) ~ is_organic, train_avocadoes)
autoplot(mod_1a)
summary(mod_1a)
bptest(mod_1a)
avocado_resid <- train_avocadoes %>%
add_residuals(mod_1a) %>%
select(-average_price)
avocado_resid %>%
ggpairs(aes(colour = is_organic, alpha = 0.5), progress = FALSE)
mod_2a <- lm(log(average_price) ~ is_organic + prop_4225,
data = train_avocadoes)
autoplot(mod_2a)
summary(mod_2a)
bptest(mod_2a)
avocado_resid <- train_avocadoes %>%
add_residuals(mod_2a) %>%
select(-average_price, -is_organic, -prop_4225)
mod_3a <- lm(log(average_price) ~ is_organic + prop_4225 + prop_large_bag,
data = train_avocadoes)
autoplot(mod_3a)
summary(mod_3a)
bptest(mod_3a)
mod_3b <- lm(log(average_price) ~ is_organic + prop_4225 + season,
data = train_avocadoes)
autoplot(mod_3b)
summary(mod_3b)
bptest(mod_3b)
mod_4a <- lm(log(average_price) ~ is_organic + prop_4225 + season + prop_large_bag,
data = train_avocadoes)
autoplot(mod_4a)
summary(mod_4a)
bptest(mod_4a)
mod_4a <- lm(log(average_price) ~ is_organic + prop_4225 + season + prop_large_bag,
data = train_avocadoes)
autoplot(mod_4a)
summary(mod_4a)
bptest(mod_4a)
mod_4a <- lm(log(average_price) ~ is_organic + prop_4225 + season + year,
data = train_avocadoes)
autoplot(mod_4a)
summary(mod_4a)
bptest(mod_4a)
regsubsets_exhaustive <- regsubsets(average_price ~ .,
data = train_avocadoes,
nvmax = 8,#max number of variables
method = "exhaustive")
library(leaps)
regsubsets_exhaustive <- regsubsets(average_price ~ .,
data = train_avocadoes,
nvmax = 8,#max number of variables
method = "exhaustive")
sum_regsubsets_exhaustive <- summary(regsubsets_backward)
regsubsets_exhaustive <- regsubsets(average_price ~ .,
data = train_avocadoes,
nvmax = 8,#max number of variables
method = "exhaustive")
sum_regsubsets_exhaustive <- summary(regsubsets_exhaustive)
sum_regsubsets_exhaustive$which
plot(regsubsets_exhaustive,
scale = "adjr2")
plot(sum_regsubsets_exhaustive$rsq,
type = "o,
pch = 20")
plot(sum_regsubsets_exhaustive$bic,
type = "o,
pch = 20")
#model with prop_large_bag
mod_4a <- lm(log(average_price) ~ is_organic + prop_4225 + season + prop_large_bag,
data = train_avocadoes)
autoplot(mod_4a)
summary(mod_4a)
bptest(mod_4a)
mod_4b <- lm(log(average_price) ~ is_organic + prop_4225 + season + year,
data = train_avocadoes)
autoplot(mod_4b)
summary(mod_4b)
bptest(mod_4b)
#equation to find the percent increase(or decrease) in response for every one unit increase in independent variable
(exp(0.21) - 1) * 100
avocado_resid <- train_avocadoes %>%
add_residuals(mod_4a) %>%
select(-average_price, -is_organic, -prop_4225, -season, - prop_large_bag)
avocado_resid %>%
ggpairs(progress = FALSE)
#model with year
mod_5a <- lm(log(average_price) ~ is_organic + prop_4225 + season +
prop_large_bag + year,
data = train_avocadoes)
autoplot(mod_5a)
summary(mod_5a)
bptest(mod_5a)
#equation to find the percent increase(or decrease) in response for every one unit increase in independent variable
(exp(0.06) - 1) * 100
BIC(mod_4a)
BIC(mod_5a)
#model with year
mod_5a <- lm(log(average_price) ~ is_organic + prop_4225 + season +
prop_large_bag + year,
data = train_avocadoes)
autoplot(mod_5a)
summary(mod_5a)
bptest(mod_5a)
BIC(mod_3b)
BIC(mod_4a)
BIC(mod_5a)
mod_5_vars <- lm(average_price ~ year + prop_4225 + prop_large_bag + is_organic,
data = train_avocadoes)
mod_6_vars <- lm(average_price ~ year + prop_4225 + prop_large_bag + is_organic
+ season,
data = train_avocadoes)
autoplot(mod_5_vars)
autoplot(mod_5_vars)
autoplot(mod_6_vars)
#try exhaustive modelling
regsubsets_exhaustive <- regsubsets(log(average_price) ~ .,
data = train_avocadoes,
nvmax = 8,#max number of variables
method = "exhaustive")
sum_regsubsets_exhaustive <- summary(regsubsets_exhaustive)
sum_regsubsets_exhaustive$which
plot(regsubsets_exhaustive,
scale = "adjr2")
plot(sum_regsubsets_exhaustive$rsq,
type = "o,
pch = 20")
plot(sum_regsubsets_exhaustive$bic,
type = "o,
pch = 20")
mod_no_season <- lm(log(average_price) ~ year + prop_4225 + prop_large_bag + is_organic,
data = train_avocadoes)
mod_season <- lm(log(average_price) ~ year + prop_4225 + prop_large_bag + is_organic
+ season,
data = train_avocadoes)
autoplot(mod_no_season)
autoplot(mod_season)
anova(mod_no_season, mod_season)
AIC(mod_no_season, mod_season)
predictions_test <- test_avocados %>%
add_predictions(mod_5a) %>%
select(average_price, pred)
predictions_test
mse_test <- mean((predictions_test$pred - test$average_price)^2)
mse_test <- mean((predictions_test$pred - predictions_test$average_price)^2)
sqrt(mse_test)
test_avocados <- test_avocados %>%
mutate(across(prop_small_bag:prop_xl_bag,
~coalesce(.x, median(.x, na.rm = TRUE))))
predictions_test <- test_avocados %>%
add_predictions(mod_5a) %>%
select(average_price, pred)
mse_test <- mean((predictions_test$pred - predictions_test$average_price)^2)
sqrt(mse_test)
predictions_test <- test_avocados %>%
add_predictions(mod_5a) %>%
select(average_price, pred)
mse_test <- mean((predictions_test$pred - predictions_test$average_price)^2)
sqrt(mse_test)
predictions_train <- train_avocados %>%
add_predictions(mod_5a) %>%
select(average_price, pred)
predictions_test <- test_avocados %>%
add_predictions(mod_5a) %>%
select(average_price, pred)
mse_test <- mean((predictions_test$pred - predictions_test$average_price)^2)
sqrt(mse_test)
predictions_train <- train_avocadoes %>%
add_predictions(mod_5a) %>%
select(average_price, pred)
mse_test <- mean((predictions_train$pred - predictions_train$average_price)^2)
sqrt(mse_train)
predictions_test <- test_avocados %>%
add_predictions(mod_5a) %>%
select(average_price, pred)
mse_test <- mean((predictions_test$pred - predictions_test$average_price)^2)
sqrt(mse_test)
predictions_train <- train_avocadoes %>%
add_predictions(mod_5a) %>%
select(average_price, pred)
mse_train <- mean((predictions_train$pred - predictions_train$average_price)^2)
sqrt(mse_train)
predictions_test <- test_avocados %>%
#adding in log of avg price since this is what we used in the model
mutate(ln_avg_price = log(average_price)) %>%
add_predictions(mod_5a) %>%
select(ln_avg_price, pred)
mse_test <- mean((predictions_test$pred - predictions_test$ln_avg_price)^2)
sqrt(mse_test)
predictions_train <- train_avocadoes %>%
#adding in log of avg price since this is what we used in the model, but we did the log manually every time
mutate(ln_avg_price = log(average_price))
add_predictions(mod_5a) %>%
select(ln_avg_price, pred)
predictions_test <- test_avocados %>%
#adding in log of avg price since this is what we used in the model
mutate(ln_avg_price = log(average_price)) %>%
add_predictions(mod_5a) %>%
select(ln_avg_price, pred)
mse_test <- mean((predictions_test$pred - predictions_test$ln_avg_price)^2)
sqrt(mse_test)
predictions_train <- train_avocadoes %>%
#adding in log of avg price since this is what we used in the model, but we did the log manually every time
mutate(ln_avg_price = log(average_price)) %>%
add_predictions(mod_5a) %>%
select(ln_avg_price, pred)
mse_train <- mean((predictions_train$pred - predictions_train$ln_avg_price)^2)
sqrt(mse_train)
10^0.191
10^0.191
10^0.193
avocados_tidy %>%
summarise(mean_avg_price = mean(average_price))
